{"version":3,"sources":["Home.js","FormRestaurant.js","Table.js","TextOutput.js","Restaurant.js","Emoji.js","CheckingDisplayMessage.js","FormCustomer.js","CustomerQueueSystem.js","Customer.js","Dashboard.js","Settings.js","FunctionTabs.js","App.js","index.js"],"names":["Home","className","Container","Row","Col","md","Card","Body","Title","Text","Alert","variant","Heading","sm","Button","size","Component","FormRestaurant","initialState","numberOfTables","chairsPerTable","state","submitForm","props","handleSubmit","setState","handleChange","event","target","name","value","this","htmlFor","style","width","type","id","onChange","onClick","TableHeader","TableBody","rows","restaurantData","map","row","index","removeRestaurant","Table","TextOutput","tables","chairs","i","restaurant","push","marginLeft","Subtitle","JSON","stringify","Restaurant","enabledForm","filter","window","localStorage","clear","nextProps","nextState","nextContext","setItem","getItem","parse","Emoji","role","aria-label","label","aria-hidden","symbol","CheckingDisplayMessage","checked","FormCustomer","noOfHeadcount","CustomerQueueSystem","customer","tablesRequired","Math","ceil","randomTables","_","sample","marginTop","Header","Item","handleTryAgainButton","Customer","customerForm","removeItem","Dashboard","loadData","customerData","calculateStats","totalTables","reduce","sum","parseInt","totalChairs","totalCustomers","headcount","occupancyRate","round","avgTableSize","stats","interval","setInterval","clearInterval","currentTime","Date","toLocaleString","lg","ProgressBar","now","Badge","length","Settings","loadSettings","savedSettings","settings","handleSettingChange","key","prevState","isModified","saveSettings","Swal","fire","icon","title","text","timer","showConfirmButton","position","toast","resetSettings","notifications","autoSave","theme","language","maxTableSize","defaultChairsPerTable","enableAnalytics","enableSounds","autoRefresh","refreshInterval","clearAllData","showClearModal","keysToKeep","Object","keys","forEach","includes","confirmButtonText","exportData","data","exportDate","toISOString","dataStr","dataBlob","Blob","url","URL","createObjectURL","link","document","createElement","href","download","split","body","appendChild","click","removeChild","revokeObjectURL","importData","file","files","reader","FileReader","onload","e","result","error","readAsText","Form","Group","Label","Control","as","Check","min","max","step","getElementById","accept","display","disabled","Modal","show","onHide","closeButton","Footer","FunctionTabs","handleTabSelect","activeKey","fluid","Tabs","onSelect","Tab","eventKey","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.1511bd08.chunk.js","sourcesContent":["import React, {Component} from 'react'\nimport { Card, Button, Alert, Row, Col, Container } from \"react-bootstrap\";\nimport './Home.css';\n\nclass Home extends Component {\n    render() {\n        return (\n            <div className=\"home-container\">\n                <Container>\n                    <div className=\"welcome-section text-center mb-5\">\n                        <div className=\"robot-icon mb-4\">🤖</div>\n                        <h1 className=\"welcome-title\">Welcome to AI Smart Cafe</h1>\n                        <p className=\"welcome-subtitle\">\n                            Intelligent restaurant and customer management made simple\n                        </p>\n                    </div>\n\n                    <Row className=\"mb-5\">\n                        <Col md={6} className=\"mb-4\">\n                            <Card className=\"feature-card h-100\">\n                                <Card.Body className=\"text-center\">\n                                    <div className=\"feature-icon\">🏪</div>\n                                    <Card.Title>Restaurant Management</Card.Title>\n                                    <Card.Text>\n                                        Set up your restaurant layout by configuring tables and chairs. \n                                        Our smart system helps optimize seating arrangements for maximum efficiency.\n                                    </Card.Text>\n                                    <div className=\"feature-list\">\n                                        <div className=\"feature-item\">✅ Configure table layouts</div>\n                                        <div className=\"feature-item\">✅ Set chairs per table</div>\n                                        <div className=\"feature-item\">✅ Real-time analytics</div>\n                                    </div>\n                                </Card.Body>\n                            </Card>\n                        </Col>\n                        \n                        <Col md={6} className=\"mb-4\">\n                            <Card className=\"feature-card h-100\">\n                                <Card.Body className=\"text-center\">\n                                    <div className=\"feature-icon\">👥</div>\n                                    <Card.Title>Customer Experience</Card.Title>\n                                    <Card.Text>\n                                        Customers can input their group size and get automatic table assignments. \n                                        Smart queue management ensures optimal seating efficiency.\n                                    </Card.Text>\n                                    <div className=\"feature-list\">\n                                        <div className=\"feature-item\">✅ Smart table matching</div>\n                                        <div className=\"feature-item\">✅ Queue management</div>\n                                        <div className=\"feature-item\">✅ Real-time availability</div>\n                                    </div>\n                                </Card.Body>\n                            </Card>\n                        </Col>\n                    </Row>\n\n                    <Alert variant=\"info\" className=\"getting-started-alert\">\n                        <Alert.Heading>🚀 Getting Started</Alert.Heading>\n                        <p>\n                            Ready to transform your restaurant experience? Follow these simple steps:\n                        </p>\n                        <hr />\n                        <Row>\n                            <Col md={4} className=\"step-item\">\n                                <div className=\"step-number\">1</div>\n                                <div className=\"step-content\">\n                                    <strong>Set up Restaurant</strong><br/>\n                                    Configure your tables and seating\n                                </div>\n                            </Col>\n                            <Col md={4} className=\"step-item\">\n                                <div className=\"step-number\">2</div>\n                                <div className=\"step-content\">\n                                    <strong>Manage Customers</strong><br/>\n                                    Process customer requests\n                                </div>\n                            </Col>\n                            <Col md={4} className=\"step-item\">\n                                <div className=\"step-number\">3</div>\n                                <div className=\"step-content\">\n                                    <strong>Monitor Analytics</strong><br/>\n                                    Track performance and insights\n                                </div>\n                            </Col>\n                        </Row>\n                    </Alert>\n\n                    <div className=\"quick-actions\">\n                        <h4 className=\"text-center mb-4\">Quick Actions</h4>\n                        <Row className=\"justify-content-center\">\n                            <Col md={3} sm={6} className=\"mb-3\">\n                                <Button variant=\"primary\" size=\"lg\" className=\"action-btn w-100\">\n                                    <div className=\"btn-icon\">📊</div>\n                                    View Dashboard\n                                </Button>\n                            </Col>\n                            <Col md={3} sm={6} className=\"mb-3\">\n                                <Button variant=\"success\" size=\"lg\" className=\"action-btn w-100\">\n                                    <div className=\"btn-icon\">🏪</div>\n                                    Setup Restaurant\n                                </Button>\n                            </Col>\n                            <Col md={3} sm={6} className=\"mb-3\">\n                                <Button variant=\"info\" size=\"lg\" className=\"action-btn w-100\">\n                                    <div className=\"btn-icon\">👥</div>\n                                    Manage Customers\n                                </Button>\n                            </Col>\n                            <Col md={3} sm={6} className=\"mb-3\">\n                                <Button variant=\"outline-secondary\" size=\"lg\" className=\"action-btn w-100\">\n                                    <div className=\"btn-icon\">⚙️</div>\n                                    Settings\n                                </Button>\n                            </Col>\n                        </Row>\n                    </div>\n\n                    <div className=\"stats-preview mt-5\">\n                        <Row className=\"text-center\">\n                            <Col md={3} sm={6} className=\"mb-3\">\n                                <div className=\"stat-item\">\n                                    <div className=\"stat-value\">24/7</div>\n                                    <div className=\"stat-label\">Available</div>\n                                </div>\n                            </Col>\n                            <Col md={3} sm={6} className=\"mb-3\">\n                                <div className=\"stat-item\">\n                                    <div className=\"stat-value\">AI</div>\n                                    <div className=\"stat-label\">Powered</div>\n                                </div>\n                            </Col>\n                            <Col md={3} sm={6} className=\"mb-3\">\n                                <div className=\"stat-item\">\n                                    <div className=\"stat-value\">Smart</div>\n                                    <div className=\"stat-label\">Analytics</div>\n                                </div>\n                            </Col>\n                            <Col md={3} sm={6} className=\"mb-3\">\n                                <div className=\"stat-item\">\n                                    <div className=\"stat-value\">Real-time</div>\n                                    <div className=\"stat-label\">Updates</div>\n                                </div>\n                            </Col>\n                        </Row>\n                    </div>\n                </Container>\n            </div>\n        )\n    }\n}\n\nexport default Home\n","import React, {Component} from 'react'\n\nclass FormRestaurant extends Component {\n\n    initialState = {\n        numberOfTables: '',\n        chairsPerTable: '',\n    }\n\n    state = this.initialState\n\n    submitForm = () => {\n        this.props.handleSubmit(this.state)\n        this.setState(this.initialState)\n    }\n\n    handleChange = (event) => {\n        const {name, value} = event.target\n\n        this.setState({\n            [name]: value,\n        })\n    }\n\n    render() {\n        const {numberOfTables, chairsPerTable} = this.state\n\n        return (\n            <form>\n                <label htmlFor={numberOfTables}>Numbers Of Tables: </label>\n                <input style={{width: '100px'}} type=\"number\" name=\"numberOfTables\" id=\"numberOfTables\"\n                       value={numberOfTables} onChange={this.handleChange}/>\n                <label htmlFor={chairsPerTable}>Chairs Per Table: </label>\n                <input style={{width: '100px'}} type=\"number\" name=\"chairsPerTable\" id=\"chairsPerTable\"\n                       value={chairsPerTable} onChange={this.handleChange}/>\n                <input type=\"button\" value=\"Submit\" onClick={this.submitForm}/>\n            </form>\n        )\n\n    }\n\n}\n\nexport default FormRestaurant;\n","import React from 'react'\n\nconst TableHeader = () => {\n    return (\n        <thead>\n        <tr>\n            <th>Number Of Tables</th>\n            <th>Chairs Per Table</th>\n        </tr>\n        </thead>\n    )\n}\n\nconst TableBody = (props) => {\n    const rows = props.restaurantData.map((row, index) => {\n        return (\n            <tr key={index}>\n                <td>{row.numberOfTables}</td>\n                <td>{row.chairsPerTable}</td>\n                <td>\n                    <button onClick={() => props.removeRestaurant(index)}>Delete</button>\n                </td>\n            </tr>\n        )\n    })\n\n    return <tbody>{rows}</tbody>\n}\n\nconst Table = (props) => {\n\n    const {restaurantData, removeRestaurant} = props\n\n    return (\n        <table>\n            <TableHeader/>\n            <TableBody restaurantData={restaurantData} removeRestaurant={removeRestaurant}/>\n        </table>\n    )\n\n}\n\nexport default Table\n","import React, {Component} from 'react'\nimport Card from \"react-bootstrap/cjs/Card\";\nimport Row from \"react-bootstrap/cjs/Row\";\n\nclass TextOutput extends Component {\n\n    render() {\n\n        let tables = []\n        let chairs = []\n\n        for (let i = 1; i <= this.props.restaurant[0].numberOfTables; i++) {\n            tables.push('T' + i)\n        }\n\n        for (let i = 1; i <= this.props.restaurant[0].chairsPerTable; i++) {\n            chairs.push('C' + i)\n        }\n\n        return (\n            <Row>\n                <Card style={{width: '18rem', marginLeft: '20px'}}>\n                    <Card.Body>\n                        <Card.Title>Number Of Tables: {this.props.restaurant[0].numberOfTables}</Card.Title>\n                        <Card.Subtitle className=\"mb-2 text-muted\">Assigned Tables: </Card.Subtitle>\n                        <Card.Text>\n                            {JSON.stringify(tables, null, \" \")}\n                        </Card.Text>\n                    </Card.Body>\n                </Card>\n\n                <Card style={{width: '18rem', marginLeft: '130px'}}>\n                    <Card.Body>\n                        <Card.Title>Chairs Per Table: {this.props.restaurant[0].chairsPerTable}</Card.Title>\n                        <Card.Subtitle className=\"mb-2 text-muted\">Assigned Chairs: </Card.Subtitle>\n                        <Card.Text>\n                            {JSON.stringify(chairs, null, \" \")}\n                        </Card.Text>\n                    </Card.Body>\n                </Card>\n            </Row>\n        )\n    }\n\n}\n\nexport default TextOutput\n","import React, { Component } from 'react'\nimport FormRestaurant from \"./FormRestaurant\";\nimport Alert from \"react-bootstrap/Alert\";\nimport Table from \"./Table\";\nimport TextOutput from \"./TextOutput\";\n\nclass Restaurant extends Component {\n\n    state = {\n        restaurant: [],\n        enabledForm: true,\n    }\n\n    handleSubmit = (restaurant) => {\n        this.setState({restaurant: [...this.state.restaurant, restaurant]})\n        this.setState({enabledForm: false})\n    }\n\n    removeRestaurant = (index) => {\n        const {restaurant} = this.state\n\n        this.setState({\n            restaurant: restaurant.filter((restaurant, i) => {\n                return i !== index\n            }),\n        })\n\n        this.setState({enabledForm: true})\n        window.localStorage.clear()\n    }\n\n    componentWillUpdate(nextProps, nextState, nextContext) {\n        localStorage.setItem('restaurant', JSON.stringify(nextState.restaurant))\n        localStorage.setItem('enabledForm', JSON.stringify(nextState.enabledForm))\n    }\n\n    componentWillMount() {\n        localStorage.getItem('restaurant') && this.setState({\n            restaurant: JSON.parse(localStorage.getItem('restaurant')),\n        })\n\n        if (localStorage.getItem('enabledForm') === 'false') {\n            this.setState({\n                enabledForm: false\n            })\n        }\n\n    }\n\n    render() {\n\n        const {restaurant, enabledForm} = this.state\n\n        return (\n            <div>\n                <Alert variant=\"primary\" className=\"mt-3\">\n                    Restaurant Module <br/>\n                    Please key in the number of tables and chairs per table in order to generate the restaurant <br/>\n                    Press Delete in order to reset the restaurant\n                </Alert>\n                <Table restaurantData={restaurant} removeRestaurant={this.removeRestaurant}/>\n                {enabledForm && <FormRestaurant handleSubmit={this.handleSubmit}/>}\n                {(!enabledForm) && <TextOutput restaurant={restaurant}/>}\n            </div>\n        )\n    }\n\n}\n\nexport default Restaurant\n","import React from 'react';\n\nconst Emoji = props => (\n    <span\n        className=\"emoji\"\n        role=\"img\"\n        aria-label={props.label ? props.label : \"\"}\n        aria-hidden={props.label ? \"false\" : \"true\"}\n    >\n        {props.symbol}\n    </span>\n);\n\nexport default Emoji;\n","import React, {Component} from 'react'\nimport Alert from \"react-bootstrap/cjs/Alert\";\nimport Emoji from \"./Emoji\";\n\nclass CheckingDisplayMessage extends Component {\n\n    render() {\n\n        let checked = false;\n\n        if (localStorage.getItem('enabledForm') === 'false') {\n            checked = true;\n        }\n\n        return (\n            <div>\n                {checked && <Alert variant={'info'}>Here are the available tables and chairs in the restaurant. <br/> Enter your headcount to get started.</Alert>}\n                {(!checked) && <Alert variant={'danger'}>\n                    Restaurant has not set any tables or chairs available for AI Smart Cafe! <Emoji symbol={\"🍔\"}></Emoji><br/>\n                    Please set before prior using the customer module. <br/>\n                    Thank you. <Emoji symbol={\"🤖\"}></Emoji>\n                </Alert>}\n            </div>\n        )\n    }\n\n}\n\nexport default CheckingDisplayMessage\n","import React, {Component} from 'react'\n\nclass FormCustomer extends Component {\n\n    initialState = {\n        noOfHeadcount: '',\n    }\n\n    state = this.initialState\n\n    submitForm = () => {\n        this.props.handleSubmit(this.state)\n        this.setState(this.initialState)\n    }\n\n    handleChange = (event) => {\n        const {name, value} = event.target\n\n        this.setState({\n            [name]: value,\n        })\n    }\n\n    render() {\n        const {noOfHeadcount} = this.state\n\n        return (\n            <form>\n                <label htmlFor={noOfHeadcount}>Number Of Headcount: </label>\n                <input style={{ width: '100px'}} type=\"number\" name=\"noOfHeadcount\" id=\"noOfHeadcount\" value={noOfHeadcount} onChange={this.handleChange}/>\n                <input type=\"button\" value=\"Submit\" onClick={this.submitForm}/>\n            </form>\n        )\n\n    }\n\n}\n\nexport default FormCustomer;\n","import React, {Component} from 'react'\nimport Card from \"react-bootstrap/cjs/Card\";\nimport ListGroup from \"react-bootstrap/cjs/ListGroup\";\nimport Emoji from \"./Emoji\";\nimport Button from \"react-bootstrap/cjs/Button\";\nimport _ from 'underscore'\n\nclass CustomerQueueSystem extends Component {\n\n    render() {\n\n        let tables = []\n\n        for (let i = 1; i <= this.props.restaurant[0].numberOfTables; i++) {\n            tables.push('T' + i)\n        }\n\n        let chairsPerTable = this.props.restaurant[0].chairsPerTable\n        let noOfHeadcount = this.props.customer[0].noOfHeadcount\n\n        let tablesRequired = Math.ceil(noOfHeadcount / chairsPerTable);\n\n        let randomTables = _.sample(tables, tablesRequired)\n\n        return (\n            <Card style={{width: '1000px', marginTop: '30px'}}>\n                <Card.Header>Number Of Headcount: {this.props.customer[0].noOfHeadcount} 👤</Card.Header>\n                <ListGroup variant=\"flush\">\n                    <ListGroup.Item>Tables Required : {tablesRequired} <Emoji symbol={'🍽'}></Emoji> </ListGroup.Item>\n                    <ListGroup.Item>Please head to Table: {JSON.stringify(randomTables, null, \" \")}</ListGroup.Item>\n                    <ListGroup.Item> <Button variant={'primary'} onClick={this.props.handleTryAgainButton}>Reset</Button></ListGroup.Item>\n                </ListGroup>\n            </Card>\n        )\n    }\n\n}\n\nexport default CustomerQueueSystem\n","import React, {Component} from 'react'\nimport Alert from \"react-bootstrap/Alert\";\nimport CheckingDisplayMessage from \"./CheckingDisplayMessage\";\nimport TextOutput from \"./TextOutput\";\nimport FormCustomer from \"./FormCustomer\";\nimport CustomerQueueSystem from \"./CustomerQueueSystem\";\n\nclass Customer extends Component {\n\n    state = {\n        restaurant: [],\n        customer: [],\n        customerForm: true\n    }\n\n    handleSubmit = (customer) => {\n        this.setState({customer: [...this.state.customer, customer]})\n        this.setState({customerForm: false})\n    }\n\n    handleTryAgainButton = () => {\n        this.setState({customerForm: true})\n        this.setState({customer: []})\n    }\n\n    componentWillMount() {\n        localStorage.getItem('restaurant') && this.setState({\n            restaurant: JSON.parse(localStorage.getItem('restaurant')),\n        })\n    }\n\n    componentWillUpdate(nextProps, nextState, nextContext) {\n        localStorage.removeItem('customer')\n        localStorage.setItem('customer', JSON.stringify(nextState.customer))\n    }\n\n    render() {\n\n        let checked = false;\n\n        if (localStorage.getItem('enabledForm') === 'false') {\n            checked = true;\n        }\n\n        const {restaurant, customerForm, customer} = this.state\n\n        return (\n            <div>\n                <Alert variant=\"success\" className=\"mt-3\"> Customer Module </Alert>\n                <CheckingDisplayMessage/>\n                {(checked) && <TextOutput restaurant={restaurant}/>}\n                {(checked) && (customerForm) && <FormCustomer handleSubmit={this.handleSubmit}/>}\n                {(checked) && (!customerForm) && <CustomerQueueSystem customer={customer} restaurant={restaurant} handleTryAgainButton={this.handleTryAgainButton}/>}\n            </div>\n        )\n    }\n\n}\n\nexport default Customer\n","import React, { Component } from 'react';\nimport { Card, Row, Col, ProgressBar, Alert, Badge } from 'react-bootstrap';\nimport './Dashboard.css';\n\nclass Dashboard extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            restaurantData: [],\n            customerData: [],\n            stats: {\n                totalTables: 0,\n                totalChairs: 0,\n                totalCustomers: 0,\n                occupancyRate: 0,\n                avgTableSize: 0\n            }\n        };\n    }\n\n    componentDidMount() {\n        this.loadData();\n        // Set up interval to refresh data every 30 seconds\n        this.interval = setInterval(() => {\n            this.loadData();\n        }, 30000);\n    }\n\n    componentWillUnmount() {\n        if (this.interval) {\n            clearInterval(this.interval);\n        }\n    }\n\n    loadData = () => {\n        const restaurantData = JSON.parse(localStorage.getItem('restaurant') || '[]');\n        const customerData = JSON.parse(localStorage.getItem('customer') || '[]');\n        \n        this.setState({\n            restaurantData,\n            customerData\n        }, this.calculateStats);\n    }\n\n    calculateStats = () => {\n        const { restaurantData, customerData } = this.state;\n        \n        const totalTables = restaurantData.reduce((sum, restaurant) => \n            sum + parseInt(restaurant.numberOfTables || 0), 0);\n        \n        const totalChairs = restaurantData.reduce((sum, restaurant) => \n            sum + (parseInt(restaurant.numberOfTables || 0) * parseInt(restaurant.chairsPerTable || 0)), 0);\n        \n        const totalCustomers = customerData.reduce((sum, customer) => \n            sum + parseInt(customer.headcount || 0), 0);\n        \n        const occupancyRate = totalChairs > 0 ? Math.round((totalCustomers / totalChairs) * 100) : 0;\n        \n        const avgTableSize = totalTables > 0 ? \n            Math.round((totalChairs / totalTables) * 10) / 10 : 0;\n\n        this.setState({\n            stats: {\n                totalTables,\n                totalChairs,\n                totalCustomers,\n                occupancyRate,\n                avgTableSize\n            }\n        });\n    }\n\n    render() {\n        const { stats, restaurantData, customerData } = this.state;\n        const currentTime = new Date().toLocaleString();\n\n        return (\n            <div className=\"dashboard-container\">\n                <div className=\"dashboard-header\">\n                    <h3>📊 Restaurant Analytics Dashboard</h3>\n                    <p className=\"last-updated\">Last updated: {currentTime}</p>\n                </div>\n\n                <Row className=\"mb-4\">\n                    <Col md={6} lg={3} className=\"mb-3\">\n                        <Card className=\"stat-card stat-card-primary\">\n                            <Card.Body className=\"text-center\">\n                                <div className=\"stat-icon\">🏪</div>\n                                <h2 className=\"stat-number\">{stats.totalTables}</h2>\n                                <p className=\"stat-label\">Total Tables</p>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                    \n                    <Col md={6} lg={3} className=\"mb-3\">\n                        <Card className=\"stat-card stat-card-success\">\n                            <Card.Body className=\"text-center\">\n                                <div className=\"stat-icon\">💺</div>\n                                <h2 className=\"stat-number\">{stats.totalChairs}</h2>\n                                <p className=\"stat-label\">Total Chairs</p>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                    \n                    <Col md={6} lg={3} className=\"mb-3\">\n                        <Card className=\"stat-card stat-card-info\">\n                            <Card.Body className=\"text-center\">\n                                <div className=\"stat-icon\">👥</div>\n                                <h2 className=\"stat-number\">{stats.totalCustomers}</h2>\n                                <p className=\"stat-label\">Current Customers</p>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                    \n                    <Col md={6} lg={3} className=\"mb-3\">\n                        <Card className=\"stat-card stat-card-warning\">\n                            <Card.Body className=\"text-center\">\n                                <div className=\"stat-icon\">📏</div>\n                                <h2 className=\"stat-number\">{stats.avgTableSize}</h2>\n                                <p className=\"stat-label\">Avg Table Size</p>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                </Row>\n\n                <Row className=\"mb-4\">\n                    <Col lg={6} className=\"mb-3\">\n                        <Card className=\"info-card\">\n                            <Card.Header>\n                                <h5>🎯 Occupancy Rate</h5>\n                            </Card.Header>\n                            <Card.Body>\n                                <div className=\"occupancy-display\">\n                                    <div className=\"occupancy-circle\">\n                                        <span className=\"occupancy-percentage\">{stats.occupancyRate}%</span>\n                                    </div>\n                                    <ProgressBar \n                                        now={stats.occupancyRate} \n                                        variant={stats.occupancyRate > 80 ? 'danger' : stats.occupancyRate > 60 ? 'warning' : 'success'}\n                                        className=\"mt-3\"\n                                    />\n                                    <div className=\"occupancy-status mt-2\">\n                                        <Badge variant={stats.occupancyRate > 80 ? 'danger' : stats.occupancyRate > 60 ? 'warning' : 'success'}>\n                                            {stats.occupancyRate > 80 ? 'Full Capacity' : \n                                             stats.occupancyRate > 60 ? 'Busy' : \n                                             stats.occupancyRate > 30 ? 'Moderate' : 'Available'}\n                                        </Badge>\n                                    </div>\n                                </div>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                    \n                    <Col lg={6} className=\"mb-3\">\n                        <Card className=\"info-card\">\n                            <Card.Header>\n                                <h5>📈 Quick Stats</h5>\n                            </Card.Header>\n                            <Card.Body>\n                                <div className=\"quick-stats\">\n                                    <div className=\"quick-stat-item\">\n                                        <span className=\"quick-stat-label\">Available Seats:</span>\n                                        <span className=\"quick-stat-value\">{stats.totalChairs - stats.totalCustomers}</span>\n                                    </div>\n                                    <div className=\"quick-stat-item\">\n                                        <span className=\"quick-stat-label\">Restaurant Setups:</span>\n                                        <span className=\"quick-stat-value\">{restaurantData.length}</span>\n                                    </div>\n                                    <div className=\"quick-stat-item\">\n                                        <span className=\"quick-stat-label\">Customer Requests:</span>\n                                        <span className=\"quick-stat-value\">{customerData.length}</span>\n                                    </div>\n                                    <div className=\"quick-stat-item\">\n                                        <span className=\"quick-stat-label\">System Status:</span>\n                                        <Badge variant=\"success\">🟢 Online</Badge>\n                                    </div>\n                                </div>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                </Row>\n\n                {restaurantData.length === 0 && customerData.length === 0 && (\n                    <Row>\n                        <Col>\n                            <Alert variant=\"info\" className=\"welcome-alert\">\n                                <Alert.Heading>👋 Welcome to your Dashboard!</Alert.Heading>\n                                <p>\n                                    This dashboard will show real-time analytics once you start using the Restaurant and Customer modules.\n                                </p>\n                                <hr />\n                                <p className=\"mb-0\">\n                                    🏪 Set up your restaurant in the <strong>Restaurant</strong> tab<br/>\n                                    👥 Process customer requests in the <strong>Customer</strong> tab\n                                </p>\n                            </Alert>\n                        </Col>\n                    </Row>\n                )}\n\n                {(restaurantData.length > 0 || customerData.length > 0) && (\n                    <Row>\n                        <Col>\n                            <Card className=\"info-card\">\n                                <Card.Header>\n                                    <h5>💡 Insights & Recommendations</h5>\n                                </Card.Header>\n                                <Card.Body>\n                                    <div className=\"insights\">\n                                        {stats.occupancyRate > 90 && (\n                                            <Alert variant=\"warning\" className=\"insight-item\">\n                                                <strong>⚠️ High Occupancy:</strong> Consider adding more tables or optimizing seating arrangements.\n                                            </Alert>\n                                        )}\n                                        {stats.occupancyRate < 30 && stats.totalTables > 0 && (\n                                            <Alert variant=\"info\" className=\"insight-item\">\n                                                <strong>💡 Low Occupancy:</strong> Great time for maintenance or special promotions.\n                                            </Alert>\n                                        )}\n                                        {stats.avgTableSize > 6 && (\n                                            <Alert variant=\"success\" className=\"insight-item\">\n                                                <strong>👍 Large Tables:</strong> Perfect for group dining and families.\n                                            </Alert>\n                                        )}\n                                        {stats.totalTables === 0 && (\n                                            <Alert variant=\"primary\" className=\"insight-item\">\n                                                <strong>🚀 Get Started:</strong> Set up your first restaurant configuration in the Restaurant tab.\n                                            </Alert>\n                                        )}\n                                    </div>\n                                </Card.Body>\n                            </Card>\n                        </Col>\n                    </Row>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default Dashboard;","import React, { Component } from 'react';\nimport { Card, Row, Col, Form, Button, Alert, Badge, Modal } from 'react-bootstrap';\nimport Swal from 'sweetalert2';\nimport './Settings.css';\n\nclass Settings extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            settings: {\n                notifications: true,\n                autoSave: true,\n                theme: 'light',\n                language: 'en',\n                maxTableSize: 8,\n                defaultChairsPerTable: 4,\n                enableAnalytics: true,\n                enableSounds: false,\n                autoRefresh: true,\n                refreshInterval: 30\n            },\n            showClearModal: false,\n            isModified: false\n        };\n    }\n\n    componentDidMount() {\n        this.loadSettings();\n    }\n\n    loadSettings = () => {\n        const savedSettings = localStorage.getItem('appSettings');\n        if (savedSettings) {\n            this.setState({\n                settings: { ...this.state.settings, ...JSON.parse(savedSettings) }\n            });\n        }\n    }\n\n    handleSettingChange = (key, value) => {\n        this.setState(prevState => ({\n            settings: {\n                ...prevState.settings,\n                [key]: value\n            },\n            isModified: true\n        }));\n    }\n\n    saveSettings = () => {\n        localStorage.setItem('appSettings', JSON.stringify(this.state.settings));\n        this.setState({ isModified: false });\n        \n        Swal.fire({\n            icon: 'success',\n            title: 'Settings Saved!',\n            text: 'Your preferences have been saved successfully.',\n            timer: 2000,\n            showConfirmButton: false,\n            position: 'top-end',\n            toast: true\n        });\n    }\n\n    resetSettings = () => {\n        const defaultSettings = {\n            notifications: true,\n            autoSave: true,\n            theme: 'light',\n            language: 'en',\n            maxTableSize: 8,\n            defaultChairsPerTable: 4,\n            enableAnalytics: true,\n            enableSounds: false,\n            autoRefresh: true,\n            refreshInterval: 30\n        };\n        \n        this.setState({ \n            settings: defaultSettings,\n            isModified: true\n        });\n        \n        Swal.fire({\n            icon: 'info',\n            title: 'Settings Reset',\n            text: 'All settings have been reset to default values.',\n            timer: 2000,\n            showConfirmButton: false,\n            position: 'top-end',\n            toast: true\n        });\n    }\n\n    clearAllData = () => {\n        this.setState({ showClearModal: false });\n        \n        // Clear all app data\n        const keysToKeep = ['appSettings'];\n        const allKeys = Object.keys(localStorage);\n        allKeys.forEach(key => {\n            if (!keysToKeep.includes(key)) {\n                localStorage.removeItem(key);\n            }\n        });\n\n        Swal.fire({\n            icon: 'warning',\n            title: 'Data Cleared',\n            text: 'All restaurant and customer data has been cleared.',\n            confirmButtonText: 'OK'\n        });\n    }\n\n    exportData = () => {\n        const data = {\n            restaurant: JSON.parse(localStorage.getItem('restaurant') || '[]'),\n            customer: JSON.parse(localStorage.getItem('customer') || '[]'),\n            settings: this.state.settings,\n            exportDate: new Date().toISOString()\n        };\n\n        const dataStr = JSON.stringify(data, null, 2);\n        const dataBlob = new Blob([dataStr], { type: 'application/json' });\n        const url = URL.createObjectURL(dataBlob);\n        \n        const link = document.createElement('a');\n        link.href = url;\n        link.download = `ai-smart-cafe-backup-${new Date().toISOString().split('T')[0]}.json`;\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n        URL.revokeObjectURL(url);\n\n        Swal.fire({\n            icon: 'success',\n            title: 'Data Exported',\n            text: 'Your data has been exported successfully.',\n            timer: 2000,\n            showConfirmButton: false,\n            position: 'top-end',\n            toast: true\n        });\n    }\n\n    importData = (event) => {\n        const file = event.target.files[0];\n        if (file) {\n            const reader = new FileReader();\n            reader.onload = (e) => {\n                try {\n                    const data = JSON.parse(e.target.result);\n                    \n                    if (data.restaurant) {\n                        localStorage.setItem('restaurant', JSON.stringify(data.restaurant));\n                    }\n                    if (data.customer) {\n                        localStorage.setItem('customer', JSON.stringify(data.customer));\n                    }\n                    if (data.settings) {\n                        this.setState({ settings: data.settings });\n                        localStorage.setItem('appSettings', JSON.stringify(data.settings));\n                    }\n\n                    Swal.fire({\n                        icon: 'success',\n                        title: 'Data Imported',\n                        text: 'Your data has been imported successfully.',\n                        confirmButtonText: 'OK'\n                    });\n                } catch (error) {\n                    Swal.fire({\n                        icon: 'error',\n                        title: 'Import Failed',\n                        text: 'The file format is invalid or corrupted.',\n                        confirmButtonText: 'OK'\n                    });\n                }\n            };\n            reader.readAsText(file);\n        }\n        event.target.value = '';\n    }\n\n    render() {\n        const { settings, showClearModal, isModified } = this.state;\n\n        return (\n            <div className=\"settings-container\">\n                <div className=\"settings-header\">\n                    <h3>⚙️ Application Settings</h3>\n                    <p>Customize your AI Smart Cafe experience</p>\n                </div>\n\n                {isModified && (\n                    <Alert variant=\"warning\" className=\"mb-4\">\n                        <strong>⚠️ Unsaved Changes:</strong> You have unsaved changes. Don't forget to save your settings!\n                        <Button variant=\"warning\" size=\"sm\" className=\"ml-3\" onClick={this.saveSettings}>\n                            Save Now\n                        </Button>\n                    </Alert>\n                )}\n\n                <Row>\n                    <Col lg={6} className=\"mb-4\">\n                        <Card className=\"settings-card\">\n                            <Card.Header>\n                                <h5>🎨 Appearance & Interface</h5>\n                            </Card.Header>\n                            <Card.Body>\n                                <Form.Group className=\"mb-3\">\n                                    <Form.Label>Theme</Form.Label>\n                                    <Form.Control\n                                        as=\"select\"\n                                        value={settings.theme}\n                                        onChange={(e) => this.handleSettingChange('theme', e.target.value)}\n                                    >\n                                        <option value=\"light\">Light</option>\n                                        <option value=\"dark\">Dark</option>\n                                        <option value=\"auto\">Auto (System)</option>\n                                    </Form.Control>\n                                </Form.Group>\n\n                                <Form.Group className=\"mb-3\">\n                                    <Form.Label>Language</Form.Label>\n                                    <Form.Control\n                                        as=\"select\"\n                                        value={settings.language}\n                                        onChange={(e) => this.handleSettingChange('language', e.target.value)}\n                                    >\n                                        <option value=\"en\">English</option>\n                                        <option value=\"es\">Español</option>\n                                        <option value=\"fr\">Français</option>\n                                        <option value=\"de\">Deutsch</option>\n                                    </Form.Control>\n                                </Form.Group>\n\n                                <Form.Check\n                                    type=\"switch\"\n                                    id=\"notifications-switch\"\n                                    label=\"Enable notifications\"\n                                    checked={settings.notifications}\n                                    onChange={(e) => this.handleSettingChange('notifications', e.target.checked)}\n                                    className=\"mb-2\"\n                                />\n\n                                <Form.Check\n                                    type=\"switch\"\n                                    id=\"sounds-switch\"\n                                    label=\"Enable sound effects\"\n                                    checked={settings.enableSounds}\n                                    onChange={(e) => this.handleSettingChange('enableSounds', e.target.checked)}\n                                />\n                            </Card.Body>\n                        </Card>\n                    </Col>\n\n                    <Col lg={6} className=\"mb-4\">\n                        <Card className=\"settings-card\">\n                            <Card.Header>\n                                <h5>🏪 Restaurant Configuration</h5>\n                            </Card.Header>\n                            <Card.Body>\n                                <Form.Group className=\"mb-3\">\n                                    <Form.Label>Maximum Table Size</Form.Label>\n                                    <Form.Control\n                                        type=\"number\"\n                                        min=\"2\"\n                                        max=\"20\"\n                                        value={settings.maxTableSize}\n                                        onChange={(e) => this.handleSettingChange('maxTableSize', parseInt(e.target.value))}\n                                    />\n                                    <Form.Text className=\"text-muted\">\n                                        Maximum number of chairs per table\n                                    </Form.Text>\n                                </Form.Group>\n\n                                <Form.Group className=\"mb-3\">\n                                    <Form.Label>Default Chairs Per Table</Form.Label>\n                                    <Form.Control\n                                        type=\"number\"\n                                        min=\"1\"\n                                        max=\"10\"\n                                        value={settings.defaultChairsPerTable}\n                                        onChange={(e) => this.handleSettingChange('defaultChairsPerTable', parseInt(e.target.value))}\n                                    />\n                                    <Form.Text className=\"text-muted\">\n                                        Default value when creating new tables\n                                    </Form.Text>\n                                </Form.Group>\n\n                                <Form.Check\n                                    type=\"switch\"\n                                    id=\"auto-save-switch\"\n                                    label=\"Auto-save data\"\n                                    checked={settings.autoSave}\n                                    onChange={(e) => this.handleSettingChange('autoSave', e.target.checked)}\n                                    className=\"mb-2\"\n                                />\n\n                                <Form.Check\n                                    type=\"switch\"\n                                    id=\"analytics-switch\"\n                                    label=\"Enable analytics tracking\"\n                                    checked={settings.enableAnalytics}\n                                    onChange={(e) => this.handleSettingChange('enableAnalytics', e.target.checked)}\n                                />\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                </Row>\n\n                <Row>\n                    <Col lg={6} className=\"mb-4\">\n                        <Card className=\"settings-card\">\n                            <Card.Header>\n                                <h5>🔄 Auto-Refresh Settings</h5>\n                            </Card.Header>\n                            <Card.Body>\n                                <Form.Check\n                                    type=\"switch\"\n                                    id=\"auto-refresh-switch\"\n                                    label=\"Enable auto-refresh\"\n                                    checked={settings.autoRefresh}\n                                    onChange={(e) => this.handleSettingChange('autoRefresh', e.target.checked)}\n                                    className=\"mb-3\"\n                                />\n\n                                {settings.autoRefresh && (\n                                    <Form.Group>\n                                        <Form.Label>Refresh Interval (seconds)</Form.Label>\n                                        <Form.Control\n                                            type=\"range\"\n                                            min=\"10\"\n                                            max=\"300\"\n                                            step=\"10\"\n                                            value={settings.refreshInterval}\n                                            onChange={(e) => this.handleSettingChange('refreshInterval', parseInt(e.target.value))}\n                                        />\n                                        <div className=\"d-flex justify-content-between\">\n                                            <small>10s</small>\n                                            <Badge variant=\"primary\">{settings.refreshInterval}s</Badge>\n                                            <small>5m</small>\n                                        </div>\n                                    </Form.Group>\n                                )}\n                            </Card.Body>\n                        </Card>\n                    </Col>\n\n                    <Col lg={6} className=\"mb-4\">\n                        <Card className=\"settings-card\">\n                            <Card.Header>\n                                <h5>💾 Data Management</h5>\n                            </Card.Header>\n                            <Card.Body>\n                                <div className=\"data-actions\">\n                                    <Button \n                                        variant=\"success\" \n                                        size=\"sm\" \n                                        onClick={this.exportData}\n                                        className=\"mb-2 w-100\"\n                                    >\n                                        📤 Export Data\n                                    </Button>\n                                    \n                                    <div className=\"mb-2\">\n                                        <Button \n                                            variant=\"info\" \n                                            size=\"sm\" \n                                            onClick={() => document.getElementById('import-file').click()}\n                                            className=\"w-100\"\n                                        >\n                                            📥 Import Data\n                                        </Button>\n                                        <input\n                                            id=\"import-file\"\n                                            type=\"file\"\n                                            accept=\".json\"\n                                            style={{ display: 'none' }}\n                                            onChange={this.importData}\n                                        />\n                                    </div>\n\n                                    <Button \n                                        variant=\"danger\" \n                                        size=\"sm\" \n                                        onClick={() => this.setState({ showClearModal: true })}\n                                        className=\"w-100\"\n                                    >\n                                        🗑️ Clear All Data\n                                    </Button>\n                                </div>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                </Row>\n\n                <div className=\"settings-actions\">\n                    <Button variant=\"primary\" onClick={this.saveSettings} disabled={!isModified}>\n                        💾 Save Settings\n                    </Button>\n                    <Button variant=\"outline-secondary\" onClick={this.resetSettings} className=\"ml-2\">\n                        🔄 Reset to Default\n                    </Button>\n                </div>\n\n                <Modal show={showClearModal} onHide={() => this.setState({ showClearModal: false })}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>⚠️ Clear All Data</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <p>Are you sure you want to clear all restaurant and customer data?</p>\n                        <Alert variant=\"danger\">\n                            <strong>Warning:</strong> This action cannot be undone. Consider exporting your data first.\n                        </Alert>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={() => this.setState({ showClearModal: false })}>\n                            Cancel\n                        </Button>\n                        <Button variant=\"danger\" onClick={this.clearAllData}>\n                            Clear All Data\n                        </Button>\n                    </Modal.Footer>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default Settings;","import React, { Component } from 'react';\nimport { Tabs, Tab, Container } from 'react-bootstrap';\nimport Home from './Home';\nimport Restaurant from './Restaurant';\nimport Customer from './Customer';\nimport Dashboard from './Dashboard';\nimport Settings from './Settings';\nimport './FunctionTabs.css';\n\nclass FunctionTabs extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            activeKey: 'home'\n        };\n    }\n\n    handleTabSelect = (key) => {\n        this.setState({ activeKey: key });\n    }\n\n    render() {\n        const { activeKey } = this.state;\n\n        return (\n            <Container fluid className=\"function-tabs-container\">\n                <div className=\"tabs-header\">\n                    <h2 className=\"app-title\">\n                        <span className=\"title-icon\">🤖</span>\n                        AI Smart Cafe\n                        <span className=\"version-badge\">v2.0</span>\n                    </h2>\n                    <p className=\"app-subtitle\">Intelligent restaurant and customer management system</p>\n                </div>\n                \n                <Tabs\n                    id=\"function-tabs\"\n                    activeKey={activeKey}\n                    onSelect={this.handleTabSelect}\n                    className=\"custom-tabs\"\n                    variant=\"pills\"\n                >\n                    <Tab \n                        eventKey=\"home\" \n                        title={\n                            <span className=\"tab-content\">\n                                <span className=\"tab-icon\">🏠</span>\n                                <span className=\"tab-text\">Home</span>\n                            </span>\n                        }\n                        className=\"tab-pane-custom\"\n                    >\n                        <div className=\"tab-content-wrapper\">\n                            <Home />\n                        </div>\n                    </Tab>\n\n                    <Tab \n                        eventKey=\"dashboard\" \n                        title={\n                            <span className=\"tab-content\">\n                                <span className=\"tab-icon\">📊</span>\n                                <span className=\"tab-text\">Dashboard</span>\n                            </span>\n                        }\n                        className=\"tab-pane-custom\"\n                    >\n                        <div className=\"tab-content-wrapper\">\n                            <Dashboard />\n                        </div>\n                    </Tab>\n\n                    <Tab \n                        eventKey=\"restaurant\" \n                        title={\n                            <span className=\"tab-content\">\n                                <span className=\"tab-icon\">🏪</span>\n                                <span className=\"tab-text\">Restaurant</span>\n                            </span>\n                        }\n                        className=\"tab-pane-custom\"\n                    >\n                        <div className=\"tab-content-wrapper\">\n                            <Restaurant />\n                        </div>\n                    </Tab>\n\n                    <Tab \n                        eventKey=\"customer\" \n                        title={\n                            <span className=\"tab-content\">\n                                <span className=\"tab-icon\">👥</span>\n                                <span className=\"tab-text\">Customer</span>\n                            </span>\n                        }\n                        className=\"tab-pane-custom\"\n                    >\n                        <div className=\"tab-content-wrapper\">\n                            <Customer />\n                        </div>\n                    </Tab>\n\n                    <Tab \n                        eventKey=\"settings\" \n                        title={\n                            <span className=\"tab-content\">\n                                <span className=\"tab-icon\">⚙️</span>\n                                <span className=\"tab-text\">Settings</span>\n                            </span>\n                        }\n                        className=\"tab-pane-custom\"\n                    >\n                        <div className=\"tab-content-wrapper\">\n                            <Settings />\n                        </div>\n                    </Tab>\n                </Tabs>\n            </Container>\n        );\n    }\n}\n\nexport default FunctionTabs;","import React, {Component} from 'react'\nimport FunctionTabs from \"./FunctionTabs\";\n\nclass App extends Component {\n    render() {\n        return (\n            <div>\n                <FunctionTabs/>\n            </div>\n        )\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\n// import App from './Api'\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}